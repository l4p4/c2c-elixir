name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      db:
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        image: postgres:11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: '1.13.3' # Define the elixir version [required]
          otp-version: '24.3.2' # Define the OTP version [required]
      # Don't cache PLTs based on mix.lock hash, as Dialyzer can incrementally update even old ones
      # Cache key based on Elixir & Erlang version (also useful when running in matrix)
      - uses: actions/cache@v3
        with:
          path: |
            _build
            deps
          key: ${{ runner.os }}-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - run: mix deps.get
      - name: Restore core plt cache
        uses: actions/cache@v3
        id: core-plt-cache
        with:
          path: .dialyzer/core
          key:
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt-core-v1
      - name: Restore local plt cache
        uses: actions/cache@v3
        id: local-plt-cache
        with:
          path: .dialyzer/local
          key:
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt-local-${{ env.MIX_ENV || 'dev' }}-v1-${{ hashFiles('**/mix.lock')}}
      - name: Compile dialyzer PLT
        if: steps.local-plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p .dialyzer/core
          mkdir -p .dialyzer/local
          mix dialyzer --plt

      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
      - name: Check code quality
        run: mix code_quality
